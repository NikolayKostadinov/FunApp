@model FunApp.Web.Models.Jokes.CreateJokeInputModel

@{
    this.ViewData["Title"] = "Create";

    var categories = this.ViewData["categories"] as IEnumerable<SelectListItem> ?? new List<SelectListItem>();
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-6 offset-3">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" class="form-control" rows="10" cols="50"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoriId" class="control-label"></label>
                <select asp-for="CategoriId" asp-items="categories" class="form-control">
                    <option selected="selected" value="" disabled="disabled">Please select categorie</option>
                </select>
                <span asp-validation-for="CategoriId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Home">Back to Index</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
